{"ast":null,"code":"var _jsxFileName = \"/Users/ishapaul/Desktop/E-commerce/src/Store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CartContext from \"./cart-context\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartProvider = props => {\n  _s();\n  const [items, updateItems] = useState([]);\n  let initialToken = localStorage.getItem(\"token\");\n  let initialEmail = localStorage.getItem(\"email\");\n  const [token, setToken] = useState(initialToken);\n  const [email, setEmail] = useState(initialEmail);\n  const userIsLoggedIn = !!token;\n  const modifiedEMail = email.replace(\"@\", \"\").replace(\".\", \"\");\n  const addItemToCartHandler = async item => {\n    let itemsCopy = [...items];\n    let itemIndex = itemsCopy.findIndex(i => i.id === item.id);\n    if (itemIndex === -1) {\n      await axios.post(`https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}`, item);\n      console.log(item);\n      // updateItems([...items,item]);\n    } else {\n      const existingCartItem = items[itemIndex];\n      const id = items[itemIndex]._id;\n      const updatedCartItem = {\n        ...item,\n        quantity: existingCartItem.quantity + 1\n      };\n      await axios.put(`https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}/${id}`, updatedCartItem);\n      console.log(\"inside addItemToCartHandler\", cartContext);\n    }\n    const response = await axios.get(`https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}`);\n    const data = await response.data;\n    updateItems(data);\n  };\n  useEffect(() => {\n    const email = localStorage.getItem(\"email\");\n    const token = localStorage.getItem(\"token\");\n    if (email && token) {\n      setToken(token);\n      setEmail(email);\n      axios.get(`https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}`).then(res => {\n        updateItems(res.data);\n      });\n    }\n  }, [modifiedEMail, token]);\n  const removeItemFromCartHandler = async item => {\n    const itemIndex = items.findIndex(i => i.id === item.id);\n    if (itemIndex !== -1) {\n      const id = items[itemIndex]._id;\n      await axios.delete(`https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}/${id}`);\n    }\n    const response = await axios.get(`https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}`);\n    const data = response.data;\n    updateItems(data);\n  };\n  let totalPrice = 0;\n  items.forEach(item => {\n    totalPrice = totalPrice + Number(item.price * item.quantity);\n  });\n  const loginHandler = (token, email) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"email\", email);\n    setToken(token);\n    setEmail(email);\n  };\n  const cartContext = {\n    items: items,\n    totalAmount: totalPrice.toFixed(2),\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    token: token,\n    email: email,\n    login: loginHandler,\n    isLoggedIn: userIsLoggedIn\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"KUe6e5gACQ7wVnGygjiMudzEgsE=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useState","useEffect","CartContext","axios","jsxDEV","_jsxDEV","CartProvider","props","_s","items","updateItems","initialToken","localStorage","getItem","initialEmail","token","setToken","email","setEmail","userIsLoggedIn","modifiedEMail","replace","addItemToCartHandler","item","itemsCopy","itemIndex","findIndex","i","id","post","console","log","existingCartItem","_id","updatedCartItem","quantity","put","cartContext","response","get","data","then","res","removeItemFromCartHandler","delete","totalPrice","forEach","Number","price","loginHandler","setItem","totalAmount","toFixed","addItem","removeItem","login","isLoggedIn","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ishapaul/Desktop/E-commerce/src/Store/CartProvider.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport CartContext from \"./cart-context\";\nimport axios from \"axios\";\n\nconst CartProvider = (props) => {\n  const [items, updateItems] = useState([]);\n  let initialToken = localStorage.getItem(\"token\");\n  let initialEmail = localStorage.getItem(\"email\");\n  const [token, setToken] = useState(initialToken);\n  const [email, setEmail] = useState(initialEmail);\n  const userIsLoggedIn = !!token;\n\n  const modifiedEMail = email.replace(\"@\", \"\").replace(\".\", \"\");\n  const addItemToCartHandler = async (item) => {\n    let itemsCopy = [...items];\n    let itemIndex = itemsCopy.findIndex((i) => i.id === item.id);\n\n    if (itemIndex === -1) {\n      await axios.post(\n        `https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}`,\n        item\n      );\n      console.log(item);\n      // updateItems([...items,item]);\n    } else {\n      const existingCartItem = items[itemIndex];\n      const id = items[itemIndex]._id;\n      const updatedCartItem = {\n        ...item,\n        quantity: existingCartItem.quantity + 1,\n      };\n      await axios.put(\n        `https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}/${id}`,\n        updatedCartItem\n      );\n\n      console.log(\"inside addItemToCartHandler\", cartContext);\n    }\n    const response = await axios.get(\n      `https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}`\n    );\n    const data = await response.data;\n    updateItems(data);\n  };\n  useEffect(() => {\n    const email = localStorage.getItem(\"email\");\n    const token = localStorage.getItem(\"token\");\n    if (email && token) {\n      setToken(token);\n      setEmail(email);\n      axios\n        .get(\n          `https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}`\n        )\n        .then((res) => {\n          updateItems(res.data);\n        });\n    }\n  }, [modifiedEMail, token]);\n\n  const removeItemFromCartHandler = async (item) => {\n    const itemIndex = items.findIndex((i) => i.id === item.id);\n    if (itemIndex !== -1) {\n      const id = items[itemIndex]._id;\n      await axios.delete(\n        `https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}/${id}`\n      );\n    }\n    const response = await axios.get(\n      `https://crudcrud.com/api/f4e20b5632324aaf82c891c6235a3134/Cart${modifiedEMail}`\n    );\n    const data = response.data;\n    updateItems(data);\n  };\n  let totalPrice = 0;\n  items.forEach((item) => {\n    totalPrice = totalPrice + Number(item.price * item.quantity);\n  });\n\n  const loginHandler = (token, email) => {\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"email\", email);\n    setToken(token);\n    setEmail(email);\n  };\n\n  const cartContext = {\n    items: items,\n    totalAmount: totalPrice.toFixed(2),\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n    token: token,\n    email: email,\n    login: loginHandler,\n    isLoggedIn: userIsLoggedIn,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}